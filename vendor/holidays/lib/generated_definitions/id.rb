# encoding: utf-8
module Holidays
  # This file is generated by the Ruby Holidays gem.
  #
  # Definitions loaded: definitions/id.yaml
  #
  # All the definitions are available at https://github.com/holidays/holidays
  module ID # :nodoc:
    def self.defined_regions
      [:id]
    end

    def self.holidays_by_month
      {
                0 => [{:function => "easter(year)", :function_arguments => [:year], :function_modifier => -2, :name => "Good Friday", :regions => [:id]}],
      1 => [{:mday => 1, :name => "New Yearâ€™s Day", :regions => [:id]},
            {:mday => 27, :year_ranges => { :limited => [2025] },:name => "Prophet's Ascension", :regions => [:id]},
            {:function => "cn_new_lunar_day(year)", :function_arguments => [:year], :name => "Chinese New Year", :regions => [:id]}],
      3 => [{:mday => 31, :year_ranges => { :limited => [2025] },:name => "Eid Al-Fitr", :regions => [:id]}],
      4 => [{:mday => 1, :year_ranges => { :limited => [2025] },:name => "Eid Al-Fitr", :regions => [:id]}],
      5 => [{:mday => 1, :name => "International Labour Day", :regions => [:id]},
            {:mday => 12, :year_ranges => { :limited => [2025] },:name => "Vesak Day", :regions => [:id]},
            {:function => "easter(year)", :function_arguments => [:year], :function_modifier => 39, :name => "Ascension Day of Jesus Christ", :regions => [:id]}],
      6 => [{:mday => 6, :year_ranges => { :limited => [2025] },:name => "Eid Al-Adha", :regions => [:id]},
            {:mday => 27, :year_ranges => { :limited => [2025] },:name => "Islamic New Year", :regions => [:id]}],
      8 => [{:mday => 17, :name => "Independence Day", :regions => [:id]}],
      9 => [{:mday => 5, :year_ranges => { :limited => [2025] },:name => "Prophet's Birthday", :regions => [:id]}],
      12 => [{:mday => 25, :name => "Christmas Day", :regions => [:id]}]
      }
    end

    def self.custom_methods
      {
          "cn_new_lunar_day(year)" => Proc.new { |year|
month_day = case year
  when 1930, 1949, 1987, 2025, 2063, 2082, 2101, 2112, 2131, 2150, 2207, 2245, 2253, 2283, 2321
    [1, 29]
  end
Date.civil(year, month_day[0], month_day[1])
},


      }
    end
  end
end
